from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters
from config import Config
from duck_cards import give_random_card, get_user_collection
import os

config = Config()

async def start(update: Update, context):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ —Å–ª–æ–≤–æ '–∫—Ä—è' –∞–±–æ '—É—Ç–∫–∞', —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ä—Ç–∫—É.")

async def handle_message(update: Update, context):
    text = update.message.text.lower()
    user_id = str(update.message.from_user.id)

    if "–∫—Ä—è" in text or "—É—Ç–∫–∞" in text:
        card = give_random_card(user_id)
        await update.message.reply_photo(photo=open(card["image_path"], "rb"),
                                         caption=f"–¢–∏ –æ—Ç—Ä–∏–º–∞–≤ –∫–∞—Ä—Ç–∫—É ü¶Ü: {card['name']} (Lv {card['level']})")
    elif "/collection" in text:
        collection = get_user_collection(user_id)
        if collection:
            message = "\n".join([f"{c['name']} (Lv {c['level']})" for c in collection])
            await update.message.reply_text("–¢–≤–æ—è –∫–æ–ª–µ–∫—Ü—ñ—è:\n" + message)
        else:
            await update.message.reply_text("–£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î –∫–∞—Ä—Ç–æ–∫.")

def run_bot():
    app = ApplicationBuilder().token(config.BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()
